{"version":3,"sources":["components/profile_header/index.js","components/profile_photo/index.js","components/profile_section/index.js","components/profile_about/index.js","components/profile_experience/index.js","components/profile_education/index.js","components/profile_reference/index.js","App.js","serviceWorker.js","index.js"],"names":["ProfileHeader","showHeaderAt","window","addEventListener","handleScroll","className","href","scrollY","this","document","body","classList","add","remove","React","Component","ProfilePhoto","src","alt","ProfileSection","id","props","children","ProfileAbout","ProfileExperience","items","point","querySelector","createSVGPoint","getCoordinates","e","svg","x","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","Item","config","Object","keys","forEach","item","el","mouseMoveHandler","bind","touchMoveHandler","prototype","update","c","clip","setAttribute","preventDefault","touch","targetTouches","slice","call","querySelectorAll","index","push","button","currentTarget","preserveAspectRatio","viewBox","width","height","cx","cy","fill","r","dy","clipPath","xlinkHref","ProfileEducation","ProfileReference","email","align","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.076e1c13.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n\n\nexport default class ProfileHeader extends React.Component {\n\n    constructor(){\n        super();\n        this.showHeaderAt = 80;\n    }\n    \n\n    componentDidMount(){\n        window.addEventListener('scroll', ()=>{this.handleScroll()});\n    }\n\n    render() {\n        return (\n            <header className=\"header-fixed\">\n                <div className=\"header-limiter\">\n                    <h1><a href=\"#\">Zemin <span>Wang</span></a></h1>\n                    <nav>\n                        <a href=\"#about_section\">ABOUT</a>\n                        <a href=\"#experience_section\">EXPERIENCE</a>\n                        <a href=\"#education_section\">EDUCATION</a>\n                        <a href=\"#contact_section\">CONTACT</a>\n                    </nav>\n                </div>\n            </header>\n        );\n    }\n\n    handleScroll(){\n        //console.log('listen', window.scrollY, this.showHeaderAt)\n        if(window.scrollY > this.showHeaderAt) {\n            document.body.classList.add(\"fixed\");\n        }\n        else {            \n            document.body.classList.remove(\"fixed\");\n        }\n        \n    }\n  }","import React from 'react';\nimport './style.css'\n\n\nexport default class ProfilePhoto extends React.Component{\n    render(){\n        return(\n        <div className=\"holder\">\n            <h1 className=\"header\">Zemin Wang</h1>\n            <div className=\"photo\">\n                <div className=\"photo-img\">\n                    <img src=\"/photo.png\" alt=\"Zemin Wang\"/>\n                </div>                \n                <div className=\"photo-sub-titile\">\n                    <h3>Full Stack Developer, Python - JavaScript</h3>\n                </div> \n            </div> \n          \n        </div>\n        )\n    }\n}","import React from 'react'\nimport './style.css'\n\nexport default class ProfileSection extends React.Component {\n    // constructor(props){\n    //     super(props);\n    // }\n\n    render(){\n        return (\n            <section id={this.props.id} className=\"App-section\">\n                {this.props.children}\n            </section>\n        )\n    }\n}","import React from 'react'\nimport './style.css';\n\nexport default class ProfileAbout extends React.Component {\n    // constructor(){\n    //     super();\n    // }\n\n    render(){\n        return (\n            <div className=\"profile-about\">\n                <header>\n                    <h1>About</h1>\n                </header>\n                \n                <div className=\"summary\">\n                    <p>\n                        Full stack Web/Mobile development, Over the last 8+ years, I have worked in all kinds of projects.<br/> \n                        I am able to build a web application from scratch very fast and with greate efficiency or continue working on existing code with ease.<br/>                        \n                        So if you have an exciting project and looking for a skillful developer, drop me a message and we will start working on your project asap.<br/>\n                    </p>                    \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\n\n\nexport default class ProfileExperience extends React.Component {\n\n    constructor(){\n\n        super();\n        this.items = [];\n\n\n        \n    }\n\n    componentDidMount(){\n        var point = document.querySelector('.profile-experience svg').createSVGPoint();\n\n        function getCoordinates(e, svg) {\n            point.x = e.clientX;\n            point.y = e.clientY;\n            return point.matrixTransform(svg.getScreenCTM().inverse());\n        }\n        \n        function Item(config) {\n            Object.keys(config).forEach(function (item) {\n                this[item] = config[item];\n            }, this);\n            this.el.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\n            this.el.addEventListener('touchmove', this.touchMoveHandler.bind(this));\n        }\n        \n        Item.prototype = {\n            update: function update(c) {\n                this.clip.setAttribute('cx', c.x);\n                this.clip.setAttribute('cy', c.y);\n            },\n            mouseMoveHandler: function mouseMoveHandler(e) {\n                this.update(getCoordinates(e, this.svg));\n            },\n            touchMoveHandler: function touchMoveHandler(e) {\n                e.preventDefault();\n                var touch = e.targetTouches[0];\n                if (touch) return this.update(getCoordinates(touch, this.svg));\n            }\n        };\n        [].slice.call(document.querySelectorAll('.profile-experience .item'), 0).forEach((item, index) => {\n            this.items.push(new Item({\n                el: item,\n                svg: item.querySelector('.profile-experience svg'),\n                clip: document.querySelector('#clip-'+index+' circle'),\n            }));\n        });\n\n        [].slice.call(document.querySelectorAll('.profile-experience button'), 0).forEach((button) => {\n            button.addEventListener('click', function(e){document.body.className = e.currentTarget.className;});\n        });\n    }\n\n    render(){\n        \n        return (\n                <div className='profile-experience'>\n                    <header>\n                        <h1>My Experience</h1>\n                        <div className='small'>\n                            <h3>Skillsets</h3> \n                            <ul>\n                                <li>Python</li>\n                                <li>Django</li>\n                                <li>Flask</li>                                \n                                <li>JavaScript</li>\n                                <li>TypeScript</li>\n                                <li>NodeJS</li>\n                                <li>React Native</li>\n                                <li>ReactJS</li>\n                                <li>VueJS</li>\n                                <li>PHP</li>\n                                <li>Laravel</li>\n                                <li>SQL</li>\n                                <li>Oracle</li>\n                                <li>Mongo</li>\n                                <li>GraphQL</li>\n                                <li>HTML/CSS</li>                                \n                            </ul>\n                        </div>\n                    </header>\n                    <main>\n                        <div className='items'>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-0' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-0)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-1' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-1)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-2' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-2)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-3' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-3)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-4' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-4)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='item'>\n                                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\n                                        <defs>\n                                            <clipPath id='clip-5' >\n                                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\n                                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \n                                            </clipPath>\n                                            \n                                        </defs>\n                                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                        </text>\n                                        <g className=\"item-container\" clipPath='url(#clip-5)'>\n                                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref='/update.png'></image>\n                                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\n                                            Updating...\n                                            </text>\n                                        </g>\n                                    </svg>\n                                </div>\n                        </div>\n                    </main>\n                </div>\n        )\n    }\n}","import React from 'react'\nimport './style.css';\n\nexport default class ProfileEducation extends React.Component {\n    // constructor(){\n    //     super();\n    // }\n\n    render(){\n        return (\n            <div className=\"profile-education\">\n                <h1>Education</h1>\n                <div className=\"edu-box\">\n                    <p><a className=\"univ-title\" href=\"https://en.wikipedia.org/wiki/Beijing_University_of_Technology\">Beijing University of Technology</a></p>\n                    <p className=\"univ-x\">Bachelor's degree, Computer Science (2013 ~ 2016)</p>                \n                </div>\n                \n            </div>\n        )\n    }\n}","import React from 'react'\nimport './style.css'\nexport default class ProfileReference extends React.Component {\n    constructor(){\n        super();\n        this.email = \"likeredapple@outlook.com\";\n    }\n\n    render(){\n        return (\n            <div className=\"profile-reference\">\n                <h1>Contact</h1>\n                <div className=\"contact-menu\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td align=\"center\" className=\"label\">Email</td>\n                                <td align=\"center\">{this.email}</td>\n                            </tr>\n                            <tr>\n                                <td align=\"center\" className=\"label\">Phone</td>\n                                <td align=\"center\" >+86 17810611470</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import {ProfilePicture} from './components/profile_picture';\nimport ProfileHeader from './components/profile_header';\n//import ProfileCoverPhoto from './components/profile_cover_photo';\nimport ProfilePhoto from './components/profile_photo';\nimport ProfileSection from './components/profile_section';\nimport ProfileAbout from './components/profile_about'\nimport ProfileExperience from './components/profile_experience'\nimport ProfileEducation from './components/profile_education'\nimport ProfileReference from './components/profile_reference'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <ProfileHeader />\n        <ProfilePhoto/>\n        {/* <ProfilePicture url = '/photo.png' altText='Zemin Wang'/> */}\n        <ProfileSection id=\"about_section\">\n            <ProfileAbout/>\n        </ProfileSection>\n        <ProfileSection id=\"experience_section\">\n            <ProfileExperience/>\n        </ProfileSection>\n        <ProfileSection id=\"education_section\">\n            <ProfileEducation/>\n        </ProfileSection>\n        <ProfileSection id=\"contact_section\">\n            <ProfileReference/>\n        </ProfileSection>        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}