{"version":3,"sources":["components/profile_header/index.js","components/profile_photo/index.js","components/profile_section/index.js","store/actions.js","components/profile_experience/index.js","pages/profile.js","components/profile_modal/index.js","store/reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["ProfileHeader","showHeaderAt","className","href","React","Component","ProfilePhoto","ProfileSection","id","this","props","children","SET","actions","toggleModal","data","type","ProfileExperience","items","point","document","querySelector","createSVGPoint","getCoordinates","e","svg","x","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","Item","config","Object","keys","forEach","item","el","addEventListener","mouseMoveHandler","bind","touchMoveHandler","prototype","update","c","clip","setAttribute","preventDefault","touch","targetTouches","slice","call","querySelectorAll","index","push","button","body","currentTarget","dispatch","projects","map","it","key","onClick","showModal","preserveAspectRatio","viewBox","width","height","cx","cy","fill","r","dy","title","clipPath","xlinkHref","link","renderItems","connect","state","profile","Profile","openedModal","ProfileModal","project","getProject","hideModal","stopPropagation","images","p","src","alt","skills","s","i","description","project_link","find","selectedProject","createReducer","action","combineReducers","store","createStore","reducer","applyMiddleware","createLogger","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e622bbe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport default class ProfileHeader extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.showHeaderAt = 80;\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        // window.addEventListener('scroll', ()=>{this.handleScroll()});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header-fixed\">\r\n                <div className=\"header-limiter\">\r\n                    {/* <h1><a href=\"#\">Zemin <span>Wang</span></a></h1> */}\r\n                    <nav>\r\n                        {/* <a href=\"#about_section\">ABOUT</a> */}\r\n                        <a href=\"#experience_section\">Portfolio - 2020.7</a>\r\n                        {/* <a href='#contact_section'>Contact</a> */}\r\n                        {/* <a href=\"/zeminwang-resume.pdf\">RESUME</a> */}\r\n                        {/* <a href=\"#education_section\">EDUCATION</a> */}\r\n                        {/* <a href=\"#contact_section\">CONTACT</a> */}\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    handleScroll(){\r\n        //console.log('listen', window.scrollY, this.showHeaderAt)\r\n        // if(window.scrollY > this.showHeaderAt) {\r\n        //     document.body.classList.add(\"fixed\");\r\n        // }\r\n        // else {            \r\n        //     document.body.classList.remove(\"fixed\");\r\n        // }\r\n        \r\n    }\r\n  }","import React from 'react';\r\nimport './style.css'\r\n\r\n\r\nexport default class ProfilePhoto extends React.Component{\r\n    render(){\r\n        return(\r\n        <div className=\"holder\">            \r\n            <div className=\"photo\">\r\n                {/* <div className=\"photo-img\">\r\n                    <img src=\"/photo1.png\" alt=\"Zemin Wang\"/>\r\n                </div>                 */}\r\n                <div className=\"photo-sub-titile\">\r\n                    <h1>Zemin Wang</h1>\r\n                    <div className=\"desc\">Responsive Web Design, REST API Design, Database Table/Query Design, Web Scrapping, Automation Script</div>\r\n                </div> \r\n            </div> \r\n          \r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './style.css'\r\n\r\nexport default class ProfileSection extends React.Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <section id={this.props.id} className=\"App-section\">\r\n                {this.props.children}\r\n            </section>\r\n        )\r\n    }\r\n}","const SET = 'PROJECT_SET';\r\nconst TOGGLE_MODAL = 'TOGGLE_MODAL';\r\n\r\nexport const actions = {\r\n    SET,\r\n    TOGGLE_MODAL\r\n}\r\n\r\nexport const setProject = data =>({\r\n    type: SET,\r\n    data\r\n})\r\n\r\nexport const toggleModal = data =>({\r\n    type: TOGGLE_MODAL,\r\n    data\r\n})","import React from 'react';\r\nimport './style.css';\r\nimport {connect} from 'react-redux'\r\nimport {setProject} from '../../store/actions';\r\nimport {toggleModal} from '../../store/actions';\r\n\r\nclass ProfileExperience extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.items = [];\r\n    }\r\n\r\n    componentDidMount(){\r\n        var point = document.querySelector('.profile-experience svg').createSVGPoint();\r\n\r\n        function getCoordinates(e, svg) {\r\n            point.x = e.clientX;\r\n            point.y = e.clientY;\r\n            return point.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        \r\n        function Item(config) {\r\n            Object.keys(config).forEach(function (item) {\r\n                this[item] = config[item];\r\n            }, this);\r\n            this.el.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n            this.el.addEventListener('touchmove', this.touchMoveHandler.bind(this));\r\n        }\r\n        \r\n        Item.prototype = {\r\n            update: function update(c) {\r\n                this.clip.setAttribute('cx', c.x);\r\n                this.clip.setAttribute('cy', c.y);\r\n            },\r\n            mouseMoveHandler: function mouseMoveHandler(e) {\r\n                this.update(getCoordinates(e, this.svg));\r\n            },\r\n            touchMoveHandler: function touchMoveHandler(e) {\r\n                e.preventDefault();\r\n                var touch = e.targetTouches[0];\r\n                if (touch) return this.update(getCoordinates(touch, this.svg));\r\n            }\r\n        };\r\n        [].slice.call(document.querySelectorAll('.profile-experience .item'), 0).forEach((item, index) => {\r\n            this.items.push(new Item({\r\n                el: item,\r\n                svg: item.querySelector('.profile-experience svg'),\r\n                clip: document.querySelector('#clip-'+index+' circle'),\r\n            }));\r\n        });\r\n\r\n        [].slice.call(document.querySelectorAll('.profile-experience button'), 0).forEach((button) => {\r\n            button.addEventListener('click', function(e){document.body.className = e.currentTarget.className;});\r\n        });\r\n    }\r\n\r\n    showModal(index) {\r\n        const {dispatch} = this.props;\r\n        dispatch(setProject(index));\r\n        // var modal = document.getElementById(\"myModal\");\r\n        // var appContent = document.getElementById(\"appContent\");\r\n        // appContent.style.display = 'none';\r\n        // modal.style.display=\"block\";     \r\n        dispatch(toggleModal(true));   \r\n    }\r\n\r\n    renderItems(){\r\n        \r\n            return this.props.projects.map( it => {\r\n                return (<div key={`key-${it.index}`} className='item' onClick={()=>{this.showModal(it.index)}}>\r\n                    <svg preserveAspectRatio='xMidYMid slice' viewBox='0 0 300 200'>\r\n                        <defs>\r\n                            <clipPath id={`clip-${it.index}`} >\r\n                                <rect x=\"0\" y=\"0\" width=\"300px\" height=\"200px\"/>\r\n                                <circle cx='0'  cy='0' fill='#000' r='150px'></circle>                                                \r\n                            </clipPath>\r\n                            \r\n                        </defs>\r\n                        <text className='svg-text' dy='.3em' x='50%' y='50%'>\r\n                            {it.title || ''}\r\n                        </text>\r\n                        <g className=\"item-container\" clipPath={`url(#clip-${it.index})`}>\r\n                            <image height='100%' preserveAspectRatio='xMinYMin slice' width='100%' xlinkHref={`${it.link || 'update.png'}`}></image>\r\n                            <text className='svg-masked-text' dy='.3em' x='50%' y='50%'>\r\n                                {it.title || ''}\r\n                            </text>\r\n                        </g>\r\n                    </svg>\r\n                </div>)\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <div className='profile-experience'>\r\n                    <header>\r\n                        <h1>Projects</h1>\r\n                        <div className='small'>\r\n                            <ul>\r\n                                <li>Python</li>\r\n                                <li>Django</li>\r\n                                <li>Flask</li>                                \r\n                                <li>JavaScript</li>\r\n                                <li>TypeScript</li>\r\n                                <li>NodeJS</li>\r\n                                <li>VueJS</li>\r\n                                <li>ReactJS</li>\r\n                                <li>React Native</li>\r\n                                <li>SQL</li>\r\n                                <li>MongoDB</li>\r\n                                <li>GraphQL</li>\r\n                                <li>HTML/CSS</li>\r\n                                <li>AWS</li>\r\n                                <li>Docker</li>\r\n                                <li>PHP</li>\r\n                                <li>Laravel</li>\r\n                            </ul>\r\n                        </div>\r\n                    </header>\r\n                    <main>\r\n                        <div className='items'>\r\n                            {this.renderItems()}\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    projects: state.profile.projects\r\n}))(ProfileExperience)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n// import {ProfilePicture} from './components/profile_picture';\r\nimport ProfileHeader from '../components/profile_header';\r\n//import ProfileCoverPhoto from './components/profile_cover_photo';\r\nimport ProfilePhoto from '../components/profile_photo';\r\nimport ProfileSection from '../components/profile_section';\r\n//import ProfileAbout from './components/profile_about'\r\nimport ProfileExperience from '../components/profile_experience'\r\n//import ProfileEducation from './components/profile_education'\r\n// import ProfileReference from '../components/profile_reference'\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        if(this.props.openedModal) return (<div></div>)\r\n        return (\r\n          <div id=\"appContent\" className=\"App-content\">\r\n            <ProfileHeader />\r\n            <ProfilePhoto/>\r\n            {/* <ProfilePicture url = '/photo.png' altText='Zemin Wang'/> */}\r\n            {/* <ProfileSection id=\"about_section\">\r\n                <ProfileAbout/>\r\n            </ProfileSection> */}\r\n            <ProfileSection id=\"experience_section\">\r\n                <ProfileExperience/>\r\n            </ProfileSection>\r\n            {/* <ProfileSection id=\"education_section\">\r\n                <ProfileEducation/>\r\n            </ProfileSection> */}\r\n            {/* <ProfileSection id=\"contact_section\">\r\n                <ProfileReference/>\r\n            </ProfileSection> */}\r\n            {/* <div className=\"App-footer\">\r\n                Copyright@2020\r\n            </div> */}\r\n          </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    openedModal: state.profile.openedModal\r\n}))(Profile)","import React from 'react'\r\nimport './style.css'\r\nimport {connect} from 'react-redux'\r\nimport {toggleModal} from '../../store/actions';\r\n\r\nclass ProfileModal extends React.Component {\r\n\r\n    hideModal(){\r\n        const {dispatch} = this.props;\r\n        dispatch(toggleModal(false));\r\n    }\r\n    render(){\r\n        if(!this.props.openedModal) return (<div></div>);\r\n        const project = this.props.getProject();\r\n        return (\r\n            <div id=\"myModal\" onClick={()=>{this.hideModal()}} className=\"modal\">\r\n                <div className=\"modal-content\" onClick={(e)=>{e.stopPropagation();}}>\r\n                    <span onClick={()=>{this.hideModal()}} className=\"close\">&times;</span>\r\n                    <div className=\"modal-detail\">\r\n                        <div className=\"modal-images\">\r\n                            {project.images.map(p=>{\r\n                                return (\r\n                                    <img src={p} alt={p} width=\"100%\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className=\"modal-description\">\r\n                            <h3>Skills</h3>\r\n                        <div className='skills'>{project.skills?project.skills.map((s, i)=>{return(<b key={i}>{s}, </b>);}):''}</div>\r\n                            <h3>Description</h3>\r\n                            <div>\r\n                                <p>{project.description || ''}</p>\r\n                                <a href={project.project_link}>{project.project_link}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    getProject: ()=>{\r\n        return state.profile.projects.find(it=>it.index === state.profile.selectedProject);\r\n    },\r\n    openedModal: state.profile.openedModal\r\n}))(ProfileModal)","import { createReducer } from 'redux-create-reducer'\r\nimport { actions } from './actions'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n    projects: [\r\n        {\r\n            index: 0,\r\n            title: \"RANOS\",\r\n            project_link: \"https://ranos.io\",\r\n            link: \"/ranos/Screenshot 2020-11-28 033753.jpg\",\r\n            images: [\r\n                \"/ranos/Screenshot 2020-11-28 033753.jpg\",\r\n                \"/ranos/Screenshot 2020-11-28 034316.jpg\",\r\n                \"/ranos/Screenshot 2020-11-28 034945.jpg\",\r\n                \"/ranos/Screenshot 2020-11-28 034745.jpg\",\r\n                \"/ranos/Screenshot 2020-11-28 034903.jpg\"\r\n            ],\r\n            skills: [\r\n                'Flask', 'Flask-Restplus', 'Swagger', 'VueJS', 'NuxtJS', \"Vue-bootstrap\", 'Docker', 'AWS S3', 'AWS RDBS(Postgres)',\r\n                'Google Analytics'\r\n            ],\r\n            description: 'RANOS is a cloud workspace, repository and distribution platform for financial analysts looking to modernise how they operate.'\r\n        },\r\n        {\r\n            index: 1, \r\n            title: \"Uzidata\",\r\n            project_link: \"https://uzidata.com\",\r\n            link: \"/uzidata/Screenshot 2020-11-28 050725.jpg\",\r\n            images: [\r\n                \"/uzidata/Screenshot 2020-11-28 050725.jpg\",\r\n                \"/uzidata/Screenshot 2020-11-28 050747.jpg\",\r\n                \"/uzidata/Screenshot 2020-11-28 050722.jpg\"\r\n            ],\r\n            skills: [\r\n                'Django', \"Django REST Framework\", \"CCXT\", \"JQuery\", \"Jsview\", \"Bootstrap\", \"Websocket\", \"Postgres\"\r\n            ],\r\n            description: 'Uzidata is a vision to create an ecosystem by delivering an information and analytics platform to the blockchain & cryptocurrency community.'\r\n        },\r\n        {\r\n            index: 2,\r\n            title: \"Colorminis\",\r\n            project_link: \"https://colorminis.com/\",\r\n            link: \"/colorminis/Screenshot 2020-11-29 135522.jpg\",\r\n            images: [\r\n                '/colorminis/Screenshot 2020-11-29 135522.jpg',\r\n                '/colorminis/Screenshot 2020-11-29 135613.jpg',\r\n                '/colorminis/Screenshot 2020-11-29 135634.jpg',\r\n                '/colorminis/Screenshot 2020-11-29 135759.jpg',\r\n                '/colorminis/Screenshot 2020-11-29 135846.jpg',\r\n                '/colorminis/Screenshot 2020-11-29 140005.jpg'\r\n\r\n            ],\r\n            skills: [\"Typescript\", \"PhaserJS\", \"HTML5 Canvas\", \"PHP\", \"Codeigniter\", \"MySQL\"],\r\n            description: \"Colormins is a platform to preview paint combinations on anime kits, fantasy tabletop minis, toys, chibis, and cutting edge 3D print custom\"\r\n        },\r\n        {\r\n            index: 3,\r\n            title: \"KoinKoin\",\r\n            project_link: \"https://koinkoin.io\",\r\n            link: \"/koinkoin/Screenshot 2020-11-29 211050.jpg\",\r\n            images: [\r\n                '/koinkoin/Screenshot 2020-11-29 211050.jpg',\r\n                '/koinkoin/Screenshot 2020-11-29 211331.jpg',\r\n                '/koinkoin/Screenshot 2020-11-29 211406.jpg',\r\n                '/koinkoin/Screenshot 2020-11-29 211536.jpg',\r\n                '/koinkoin/Screenshot 2020-11-29 211606.jpg'\r\n            ],\r\n            skills: ['NodeJS', 'ReactJS', 'Express', 'MonogoDB', 'REST API', 'Bithollaex', 'Docker'],\r\n            description: 'KoinKoin is digital assets exchange service.'\r\n        },\r\n        {\r\n            index: 4,\r\n            title: \"1GuyGadGet\",\r\n            project_link: \"https://www.1guygadget.com/\",\r\n            link: \"/1guygadget/Screenshot 2020-11-29 203725.jpg\",\r\n            images: [\r\n                '/1guygadget/Screenshot 2020-11-29 203725.jpg',\r\n                '/1guygadget/Screenshot 2020-11-29 203739.jpg',\r\n                '/1guygadget/Screenshot 2020-11-29 203756.jpg',\r\n                '/1guygadget/Screenshot 2020-11-29 203821.jpg'\r\n            ],\r\n            skills: [\"PHP\", \"HTML/CSS\", \"MySQL\", \"Email Template Design\"],\r\n            description: \"1GuyGadGet is a platform for users to sell their used or unused electronics.\"\r\n        }\r\n    ],\r\n    openedModal: false,\r\n    selectedProject: 0\r\n}\r\n\r\nconst profile = createReducer(initialState, {\r\n    [actions.SET] (state, action){\r\n        return {\r\n            ...state,\r\n            selectedProject: action.data\r\n        }\r\n    },\r\n    [actions.TOGGLE_MODAL] (state, action){\r\n        return {\r\n            ...state,\r\n            openedModal: action.data\r\n        }\r\n    }\r\n})\r\n\r\nexport default combineReducers({\r\n    profile\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer, applyMiddleware(createLogger()))\r\n\r\nexport default store\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Profile from './pages/profile';\r\nimport ProfileModal from './components/profile_modal';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <Provider store = {store}>\r\n        <div className=\"App\">\r\n            <Profile/>\r\n            <ProfileModal/>\r\n        </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}